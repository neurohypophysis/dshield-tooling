#!/bin/bash

set -euo pipefail

# needed so that the location of the awk script can be identified as relative to this script's location.
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

usage() {
  cat <<EOF
Usage: $0 [options] logfile.jsonl

Options:
  -s, --start        Start timestamp (inclusive), e.g. 2025-07-27T05:00:00
  -e, --end          End timestamp (inclusive), e.g. 2025-07-28T00:00:00
  -i, --interval     Interval for aggregation: minute, hour, day, week, month (default: hour)
  -F, --fill-empty   Fill missing intervals with 0
  -nh, --no-hist Do not print histogram bars, just TSV output

Example:
  $0 -s 2025-07-27T00:00:00 -e 2025-07-28T00:00:00 -i day logs.jsonl
EOF
  exit 1
}

INTERVAL="hour"
START_TS=""
END_TS=""
LOGFILE=""
NO_HISTOGRAM=0
FILL_EMPTY=0

while [[ $# -gt 0 ]]; do
  case "$1" in
    -s|--start)
      START_TS="$2"
      shift 2
      ;;
    -e|--end)
      END_TS="$2"
      shift 2
      ;;
    -i|--interval)
      INTERVAL="$2"
      shift 2
      ;;
    -F|--fill-empty)
      FILL_EMPTY=1
      shift
      ;;
    -nh|--no-hist)
      NO_HISTOGRAM=1
      shift
      ;;
    -*)
      echo "Unknown option: $1"
      usage
      ;;
    *)
      LOGFILE="$1"
      shift
      ;;
  esac
done

if [[ -z "$LOGFILE" || ! -f "$LOGFILE" ]]; then
    if [[ -t 0 ]]; then
        echo "Error: logfile missing or not found."
        usage
    else
        input="-"
        LOGFILE="stdin"
    fi
else
    input="$LOGFILE"
fi


case "$INTERVAL" in
  minute|hour|day|week|month) ;;
  *)
    echo "Invalid interval: $INTERVAL"
    usage
    ;;
esac

[[ $NO_HISTOGRAM -eq 0 ]] && echo "=== Requests Per $INTERVAL ==="
[[ $NO_HISTOGRAM -eq 0 ]] && echo "Log file: $LOGFILE"
[[ -n "$START_TS" && $NO_HISTOGRAM -eq 0 ]] && echo "Start: $START_TS"
[[ -n "$END_TS" && $NO_HISTOGRAM -eq 0 ]] && echo "End: $END_TS"
[[ $NO_HISTOGRAM -eq 0 ]] && echo



jq -r 'if type=="array" then .[] else . end | .time // .timestamp' "$input" \
  | awk -v start="$START_TS" -v end="$END_TS" -v interval="$INTERVAL" \
         -v nohist="$NO_HISTOGRAM" -v fill_empty="$FILL_EMPTY" -f "$SCRIPT_DIR/lib/hist.awk"
